{"ast":null,"code":"var _jsxFileName = \"/Users/stanislav/practical_web_dev_class/github/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { UilSearch } from '@iconscout/react-unicons';\nimport sunny from './assets/01d.png';\nimport sun_with_cloud from './assets/02d.png';\nimport cloud from './assets/03d.png';\nimport double_cloud from './assets/04d.png';\nimport rain from './assets/09d.png';\nimport rain_with_sun from './assets/11d.png';\nimport snow from './assets/13d.png';\nimport wind from './assets/50d.png';\nimport thunder from './assets/11d.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherApp = () => {\n  _s();\n  const [weather, setWeather] = useState({\n    forecast: []\n  });\n  const fetchData = async city => {\n    try {\n      const response = await axios.get(`http://localhost:3007/api/weather?city=${city}`);\n      const data = response.data;\n      document.getElementById('top-degree').innerHTML = `${Math.floor(data.forecast[0].temperature)}C°`;\n      document.getElementById('sun').innerHTML = `${data.forecast[0].weatherDescription}`;\n      document.getElementById('wind').innerHTML = \"Wind: \" + `${data.forecast[0].windSpeed}` + \"mph\";\n      document.getElementById('humidity').innerHTML = `Humidity ${data.forecast[0].humidityCheck} %`;\n      const cards = data.forecast.slice(0);\n      cards.forEach((day, index) => {\n        const card = document.getElementById(`card-${index + 1}`);\n        const dayElement = card.querySelector('.day');\n        const imageElement = card.querySelector('img');\n        const upperDegElement = card.querySelector('.upper-deg');\n        const lowerDegElement = card.querySelector('.lower-deg');\n        if (cards[index].weatherDescription === \"scattered clouds\") {\n          imageElement.src = cloud;\n        } else if (cards[index].weatherDescription === \"clear sky\") {\n          imageElement.src = sunny;\n        } else if (cards[index].weatherDescription === \"few clouds\") {\n          imageElement.src = sun_with_cloud;\n        } else if (cards[index].weatherDescription === \"broken clouds\") {\n          imageElement.src = double_cloud;\n        } else if (cards[index].weatherDescription === \"shower rain\") {\n          imageElement.src = rain;\n        } else if (cards[index].weatherDescription === \"rain\") {\n          imageElement.src = rain_with_sun;\n        } else if (cards[index].weatherDescription === \"thunderstorm\") {\n          imageElement.src = thunder;\n        } else if (cards[index].weatherDescription === \"snow\") {\n          imageElement.src = snow;\n        } else if (cards[index].weatherDescription === \"mist\") {\n          imageElement.src = wind;\n        }\n        if (index === 0) {\n          document.getElementById('sep-img').src = imageElement.src;\n        }\n        upperDegElement.innerHTML = `${Math.floor(day.tempMax)}C`;\n        lowerDegElement.innerHTML = `${Math.floor(day.tempMin)}C`;\n      });\n    } catch (error) {\n      console.error('Error fetching weather data:', error.message);\n    }\n  };\n\n  // Replace \"New York\" with the default city you want\n  const defaultCity = \"New York\";\n  fetchData(defaultCity);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"doOAITrgYDhV8MaqL/n7ZS373aE=\");\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","axios","UilSearch","sunny","sun_with_cloud","cloud","double_cloud","rain","rain_with_sun","snow","wind","thunder","jsxDEV","_jsxDEV","WeatherApp","_s","weather","setWeather","forecast","fetchData","city","response","get","data","document","getElementById","innerHTML","Math","floor","temperature","weatherDescription","windSpeed","humidityCheck","cards","slice","forEach","day","index","card","dayElement","querySelector","imageElement","upperDegElement","lowerDegElement","src","tempMax","tempMin","error","console","message","defaultCity","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stanislav/practical_web_dev_class/github/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { UilSearch } from '@iconscout/react-unicons';\nimport sunny from './assets/01d.png';\nimport sun_with_cloud from './assets/02d.png';\nimport cloud from './assets/03d.png';\nimport double_cloud from './assets/04d.png';\nimport rain from './assets/09d.png';\nimport rain_with_sun from './assets/11d.png';\nimport snow from './assets/13d.png';\nimport wind from './assets/50d.png';\nimport thunder from './assets/11d.png';\n\nconst WeatherApp = () => {\n  const [weather, setWeather] = useState({\n    forecast: [],\n  });\n\n  const fetchData = async (city) => {\n    try {\n      const response = await axios.get(`http://localhost:3007/api/weather?city=${city}`);\n      const data = response.data;\n\n      document.getElementById('top-degree').innerHTML = `${Math.floor(data.forecast[0].temperature)}C°`;\n      document.getElementById('sun').innerHTML = `${data.forecast[0].weatherDescription}`;\n      document.getElementById('wind').innerHTML = \"Wind: \" + `${data.forecast[0].windSpeed}` + \"mph\";\n      document.getElementById('humidity').innerHTML = `Humidity ${data.forecast[0].humidityCheck} %`;\n\n      const cards = data.forecast.slice(0);\n\n      cards.forEach((day, index) => {\n        const card = document.getElementById(`card-${index + 1}`);\n        const dayElement = card.querySelector('.day');\n        const imageElement = card.querySelector('img');\n        const upperDegElement = card.querySelector('.upper-deg');\n        const lowerDegElement = card.querySelector('.lower-deg');\n\n        if (cards[index].weatherDescription === \"scattered clouds\") {\n          imageElement.src = cloud;\n        } else if (cards[index].weatherDescription === \"clear sky\") {\n          imageElement.src = sunny;\n        } else if (cards[index].weatherDescription === \"few clouds\") {\n          imageElement.src = sun_with_cloud;\n        } else if (cards[index].weatherDescription === \"broken clouds\") {\n          imageElement.src = double_cloud;\n        } else if (cards[index].weatherDescription === \"shower rain\") {\n          imageElement.src = rain;\n        } else if (cards[index].weatherDescription === \"rain\") {\n          imageElement.src = rain_with_sun;\n        } else if (cards[index].weatherDescription === \"thunderstorm\") {\n          imageElement.src = thunder;\n        } else if (cards[index].weatherDescription === \"snow\") {\n          imageElement.src = snow;\n        } else if (cards[index].weatherDescription === \"mist\") {\n          imageElement.src = wind;\n        }\n        if (index === 0) {\n          document.getElementById('sep-img').src = imageElement.src;\n        }\n\n        upperDegElement.innerHTML = `${Math.floor(day.tempMax)}C`;\n        lowerDegElement.innerHTML = `${Math.floor(day.tempMin)}C`;\n      });\n\n    } catch (error) {\n      console.error('Error fetching weather data:', error.message);\n    }\n  };\n\n  // Replace \"New York\" with the default city you want\n  const defaultCity = \"New York\";\n  fetchData(defaultCity);\n\n  return (\n    <div className=\"App\">\n      {/* ... rest of the code */}\n    </div>\n  );\n};\n\nexport default WeatherApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}